<oops:OOPSResponse xmlns:oops="http://www.oeg-upm.net/oops">
<oops:Pitfall>
<oops:Code>P08</oops:Code><oops:Name>Missing annotations</oops:Name>
<oops:Description>This pitfall consists in creating an ontology element and failing to provide human readable annotations attached to it. Consequently, ontology elements lack annotation properties that label them (e.g. rdfs:label, lemon:LexicalEntry, skos:prefLabel or skos:altLabel) or that define them (e.g. rdfs:comment or dc:description). This pitfall is related to the guidelines provided in [5].	</oops:Description>
<oops:Importance>Minor</oops:Importance>
<oops:NumberAffectedElements>2</oops:NumberAffectedElements>
<oops:Affects>
<oops:AffectedElement>http://oops.linkeddata.es/data/testP24#ClassC</oops:AffectedElement>
<oops:AffectedElement>http://oops.linkeddata.es/data/testP24#ClassB</oops:AffectedElement>
</oops:Affects>
</oops:Pitfall>
<oops:Pitfall>
<oops:Code>P10</oops:Code><oops:Name>Missing disjointness</oops:Name>
<oops:Description>The ontology lacks disjoint axioms between classes or between properties that should be defined as disjoint. This pitfall is related with the guidelines provided in [6], [2] and [7].	</oops:Description>
<oops:Importance>Important</oops:Importance>
</oops:Pitfall>
<oops:NumberAffectedElements>1</oops:NumberAffectedElements>
<oops:Pitfall>
<oops:Code>P13</oops:Code><oops:Name>Inverse relationships not explicitly declared</oops:Name>
<oops:Description>This pitfall appears when any relationship (except for those that are defined as symmetric properties using owl:SymmetricProperty) does not have an inverse relationship (owl:inverseOf) defined within the ontology.	</oops:Description>
<oops:Importance>Minor</oops:Importance>
<oops:NumberAffectedElements>1</oops:NumberAffectedElements>
<oops:Affects>
<oops:NoInverseSuggestion>
<oops:AffectedElement>http://oops.linkeddata.es/data/testP24#relationshipS</oops:AffectedElement>
</oops:NoInverseSuggestion>
</oops:Affects>
</oops:Pitfall>
<oops:Pitfall>
<oops:Code>P24</oops:Code><oops:Name>Using recursive definitions</oops:Name>
<oops:Description>An ontology element (a class, an object property or a datatype property) is used in its own definition. Some examples of this would be: (a) the definition of a class as the enumeration of several classes including itself;  (b) the appearance of a class within its owl:equivalentClass or rdfs:subClassOf axioms; (c) the appearance of an object property in its rdfs:domain or range rdfs:range definitions; or (d) the appearance of a datatype property in its rdfs:domain definition.	</oops:Description>
<oops:Importance>Important</oops:Importance>
<oops:NumberAffectedElements>3</oops:NumberAffectedElements>
<oops:Affects>
<oops:AffectedElement>http://oops.linkeddata.es/data/testP24#ClassA</oops:AffectedElement>
<oops:AffectedElement>http://oops.linkeddata.es/data/testP24#relationshipS</oops:AffectedElement>
<oops:AffectedElement>http://oops.linkeddata.es/data/testP24#attributeU</oops:AffectedElement>
</oops:Affects>
</oops:Pitfall>
</oops:OOPSResponse>