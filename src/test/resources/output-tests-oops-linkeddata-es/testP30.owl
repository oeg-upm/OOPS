<oops:OOPSResponse xmlns:oops="http://www.oeg-upm.net/oops">
<oops:Pitfall>
<oops:Code>P04</oops:Code><oops:Name>Creating unconnected ontology elements</oops:Name>
<oops:Description>Ontology elements (classes, object properties and datatype properties) are created isolated, with no relation to the rest of the ontology.	</oops:Description>
<oops:Importance>Minor</oops:Importance>
<oops:NumberAffectedElements>2</oops:NumberAffectedElements>
<oops:Affects>
<oops:AffectedElement>http://oops.linkeddata.es/data/testP30#Motorcar</oops:AffectedElement>
<oops:AffectedElement>http://oops.linkeddata.es/data/testP30#Car</oops:AffectedElement>
</oops:Affects>
</oops:Pitfall>
<oops:Pitfall>
<oops:Code>P10</oops:Code><oops:Name>Missing disjointness</oops:Name>
<oops:Description>The ontology lacks disjoint axioms between classes or between properties that should be defined as disjoint. This pitfall is related with the guidelines provided in [6], [2] and [7].	</oops:Description>
<oops:Importance>Important</oops:Importance>
</oops:Pitfall>
<oops:NumberAffectedElements>1</oops:NumberAffectedElements>
<oops:Pitfall>
<oops:Code>P30</oops:Code><oops:Name>Equivalent classes not explicitly declared</oops:Name>
<oops:Description>This pitfall consists in missing the definition of equivalent classes (owl:equivalentClass) in case of duplicated concepts. When an ontology reuses terms from other ontologies, classes that have the same meaning should be defined as equivalent in order to benefit the interoperability between both ontologies.	</oops:Description>
<oops:Importance>Important</oops:Importance>
<oops:NumberAffectedElements>1</oops:NumberAffectedElements>
<oops:Affects>
<oops:MightBeEquivalentClass>
<oops:AffectedElement>http://oops.linkeddata.es/data/testP30#Motorcar</oops:AffectedElement>
<oops:AffectedElement>http://oops.linkeddata.es/data/testP30#Car</oops:AffectedElement>
</oops:MightBeEquivalentClass>
</oops:Affects>
</oops:Pitfall>
</oops:OOPSResponse>